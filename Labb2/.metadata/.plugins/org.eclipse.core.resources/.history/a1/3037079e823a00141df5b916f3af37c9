<?php
	
	require_once("src/LoginModel.php");
	require_once("src/LoginView.php");
	
	class LoginController
	{
		private $view;
		private $model;
		
		public function __construct()
		{
			// Skapar nya instanser av modell- & vy-klassen.
			$this->model = new LoginModel();
			$this->view = new LoginView($this->model);
			
			// Ifall användaren tryckt på "Logga in" och inte redan är inloggad...
			if($this->view->didUserPressLogin() && !$this->model->checkLoginStatus())
			{
				// ...så loggas användaren in.
				$this->doLogin();
			}
			
			// Ifall användaren tryckt på "Logga ut" och är inloggad...
			if($this->view->didUserPressLogout() && $this->model->checkLoginStatus())
			{
				// ...så loggas användaren ut.
				$this->doLogout();
			}
		}
		
		// Hämtar sidans innehåll.
		public function doHTMLBody()
		{
			return $this->view->showLoginPage();
		}
		
		// Försöker verifiera användaren.
		public function doLogin()
		{
			// Kontrollerar ifall användaren tryckt på "Logga in" och inte redan är inloggad.
			if($this->view->didUserPressLogin() && !$this->model->checkLoginStatus())
			{
				// Kontrollerar indata
				$checkboxStatus = false;
				
				// Kontrollera ifall "Håll mig inloggad"-rutan är ikryssad.
				if(isset($_POST['checkbox']))
				{
					$checkboxStatus = true;
				}
				
				try
				{
					// Verifiera data i fälten.
					$this->model->verifyUserInput($_POST['username'], $_POST['password'], $checkboxStatus);
				}
				catch(Exception $e)
				{
					$this->view->showMessage($e->getMessage());
				}
			}
			
			$this->view->successfulLogin();
			
			//Generera utdata
			return $this->view->showLoginPage();
		}
		
		public function doLogout()
		{
			// Kontrollera indata, tryckte användaren på Logga ut?
			if($this->view->didUserPressLogout() && $this->model->checkLoginStatus())
			{
				// Logga ut.
				$this->model->logOut();
				
				//Generera utdata, tillåt användaren att logga in igen.
				$this->doLogin();
				$this->view->successfulLogout();
			}
		}
	}
	
?>